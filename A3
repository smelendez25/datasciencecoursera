# Autor: Steven Melendez
# Assigment # 3 - R-Programming Coursera
# Read the outcome data into R via the read.csv function and look at the first few rows.

# Autor: Steven Melendez
# Setting the working directory

library(lattice)
setwd("/Users/Steven/Desktop/R-Programming")

# Read the outcome data into R via the read.csv function and look at the first few rows.
Outcome <- read.csv("Outcome-of-care-measures.csv", colClasses = "character")
head(Outcome)

#Part 1
#1	Plot the 30-day mortality rates for heart attack
# To make a simple histogram of the 30-day death rates from heart attack run
Outcome[, 11] <- as.numeric(Outcome[, 11])  
hist(Outcome[, 11],xlab="30-day Death Rate",main="Heart Attack 30-day Death Rate") 

#Part 2
#Write a function called best that take two arguments: the 2-character abbreviated name of a state and
# an outcome name

Init <- function(fileStr, workDirStr = "/Users/Steven/Desktop/R-Programming") {
  retDfr <- read.csv(fileStr, colClasses = "character")
  return(retDfr)
}

best <- function(stateChr, outcomeChr) {
  outcomeDfr <- Init("Outcome-of-care-measures.csv")
  
  suppressWarnings(outcomeDfr[, 11] <- as.numeric(outcomeDfr[, 11]))
  suppressWarnings(outcomeDfr[, 17] <- as.numeric(outcomeDfr[, 17]))
  suppressWarnings(outcomeDfr[, 23] <- as.numeric(outcomeDfr[, 23]))
  
  tableDfr <- data.frame(State = names(tapply(outcomeDfr$State, outcomeDfr$State, 
                                              length)), Freq = tapply(outcomeDfr$State, outcomeDfr$State, length))
  rownames(tableDfr) <- NULL
  
  inputDfr <- data.frame(Outcome = c("heart attack", "heart failure", "pneumonia"), 
                         Col = c(11, 17, 23))
  
  if (nrow(tableDfr[tableDfr$State == stateChr, ]) == 0) 
    stop("invalid state")
  if (nrow(inputDfr[inputDfr$Outcome == outcomeChr, ]) == 0) 
    stop("invalid outcome")
  
  stateDfr <- outcomeDfr[outcomeDfr$State == stateChr, ]
  colNum <- inputDfr[inputDfr$Outcome == outcomeChr, 2]
  rowNum <- which.min(stateDfr[, colNum])
  return(stateDfr[rowNum, ]$Hospital.Name)
}

rankhospital <- function(stateChr, outcomeChr, rankObj) {
  outcomeDfr <- Init("Outcome-of-care-measures.csv")
  
  suppressWarnings(outcomeDfr[, 11] <- as.numeric(outcomeDfr[, 11]))
  suppressWarnings(outcomeDfr[, 17] <- as.numeric(outcomeDfr[, 17]))
  suppressWarnings(outcomeDfr[, 23] <- as.numeric(outcomeDfr[, 23]))
  
  tableDfr <- data.frame(State = names(tapply(outcomeDfr$State, outcomeDfr$State, 
                                              length)), Freq = tapply(outcomeDfr$State, outcomeDfr$State, length))
  rownames(tableDfr) <- NULL
  
  inputDfr <- data.frame(Outcome = c("heart attack", "heart failure", "pneumonia"), 
                         Col = c(11, 17, 23))
  
  if (nrow(tableDfr[tableDfr$State == stateChr, ]) == 0) 
    stop("invalid state")
  if (nrow(inputDfr[inputDfr$Outcome == outcomeChr, ]) == 0) 
    stop("invalid outcome")
  
  stateDfr <- outcomeDfr[outcomeDfr$State == stateChr, ]
  colNum <- inputDfr[inputDfr$Outcome == outcomeChr, 2]
  stateDfr <- stateDfr[complete.cases(stateDfr[, colNum]), ]
  stateDfr <- stateDfr[order(stateDfr[, colNum], stateDfr$Hospital.Name), 
                       ]
  
  if (rankObj == "best") 
    rankObj <- 1
  if (rankObj == "worst") 
    rankObj <- nrow(stateDfr)
  
  suppressWarnings(rankNum <- as.numeric(rankObj))
  
  return(stateDfr[rankNum, ]$Hospital.Name)
}

# Part 4
rankall <- function(outcomeChr, rankObj = "best") {
  outcomeDfr <- Init("Outcome-of-care-measures.csv")
  
  suppressWarnings(outcomeDfr[, 11] <- as.numeric(outcomeDfr[, 11]))
  suppressWarnings(outcomeDfr[, 17] <- as.numeric(outcomeDfr[, 17]))
  suppressWarnings(outcomeDfr[, 23] <- as.numeric(outcomeDfr[, 23]))
  
  tableDfr <- data.frame(State = names(tapply(outcomeDfr$State, outcomeDfr$State, 
                                              length)), Freq = tapply(outcomeDfr$State, outcomeDfr$State, length))
  rownames(tableDfr) <- NULL
  
  inputDfr <- data.frame(Outcome = c("heart attack", "heart failure", "pneumonia"), 
                         Col = c(11, 17, 23))
  
  if (nrow(inputDfr[inputDfr$Outcome == outcomeChr, ]) == 0) 
    stop("invalid outcome")
  
  nameChr <- character(0)
  
  for (stateChr in tableDfr$State) {
    stateDfr <- outcomeDfr[outcomeDfr$State == stateChr, ]
    colNum <- inputDfr[inputDfr$Outcome == outcomeChr, 2]
    stateDfr <- stateDfr[complete.cases(stateDfr[, colNum]), ]
    stateDfr <- stateDfr[order(stateDfr[, colNum], stateDfr$Hospital.Name), 
                         ]
    
    if (rankObj == "best") 
      rankNum <- 1 else if (rankObj == "worst") 
        rankNum <- nrow(stateDfr) else suppressWarnings(rankNum <- as.numeric(rankObj))
    
    nameChr <- c(nameChr, stateDfr[rankNum, ]$Hospital.Name)
  }
  
  return(data.frame(hospital = nameChr, state = tableDfr$State))
}

source("submitscript3.R")
submit()
